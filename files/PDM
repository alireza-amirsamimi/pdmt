#!/bin/bash
#Persepolis Download Manager written by AliReza AmirSamimi(alireza.amirsamimi@ubuntu.ir) and It is based on aria2
#s=download status r=aria ready p=aria pid e=end status d=downloaded f=fail_counter l=download_link qf=queue failed links zenity=zenity text zenityp=zenity percent
#0=aria ready 1=aria not ready
#download_flag 0=completed 1=paused 2=failed 3=download 4=reconnecting
#end_status 0=not end yet 1=time is up 2=download completed or canceled or...

#functions
finish (){
rm -v $temp_path/"s$pdm_num".txt >/dev/null 2>&1
while [ ! -f $temp_path/"zenityexit$pdm_num".txt ] ; do
	sleep 1
done
rm -v $temp_path/"zenityexit$pdm_num".txt >/dev/null 2>&1
rm -v $temp_path/"p$pdm_num".txt >/dev/null 2>&1
rm -v $temp_path/"r$pdm_num".txt >/dev/null 2>&1
rm -v $temp_path/"s$pdm_num".txt >/dev/null 2>&1
rm -v $temp_path/"$pdm_num".txt  >/dev/null 2>&1
rm -v $temp_path/"e$pdm_num".txt >/dev/null 2>&1
rm -v $temp_path/"d$pdm_num".txt >/dev/null 2>&1
rm -v $temp_path_2/aria_ready_file >/dev/null 2>&1
rm -v $temp_path/"f$pdm_num".txt >/dev/null 2>&1
rm -v $temp_path/"l$pdm_num".txt >/dev/null 2>&1
rm -v $temp_path/"qf$pdm_num".txt >/dev/null 2>&1
rm -v $temp_path/"zenity$pdm_num".txt >/dev/null 2>&1
rm -v $temp_path/"zenityp$pdm_num".txt >/dev/null 2>&1
rm -v $temp_path/"youtube$pdm_num".txt >/dev/null 2>&1
rm -v $temp_path/"youtubeq$pdm_num".txt >/dev/null 2>&1
rm -v $temp_path/"fnameq$pdm_num".txt >/dev/null 2>&1
rm -v $temp_path/"fnameqf$pdm_num".txt >/dev/null 2>&1

}


log () {
((log_counter ++))
if [ "$log_counter" -gt "10" ] && [ "$log_config" = "yes" ]
   	then
   		((log_counter_link ++))
   		if [ "$log_counter_link" -eq "1" ]
   	    		then
				date|cat >> $download_folder/log
   	    			echo -e "$download_link\n$file_name_extension_prime" >> $download_folder/log
   	    	fi
   	        if [ "$log_counter_link" -gt "10" ]
   	    	    then
   	    		    log_counter_link=0
   	        fi
   	        echo "$progress_title" >> $download_folder/log
   	        log_counter=0

fi
}
file_extension (){
file_name_extension="${save_as_temp##*/}"
extension="${file_name_extension##*.}"
case "$extension" in
	act|aiff|aac|amr|ape|au|awb|dct|dss|dvf|flac|gsm|iklax|ivs|m4a|m4p|mmf|mp3|mpc|msv|ogg|oga|opus|ra|raw|sln|tta|vox|wav|wma|wv)
        file_type="Audios"
	;;
	3g2|3gp|asf|avi|drc|flv|m4v|mkv|mng|mov|qt|mp4|m4p|mpg|mp2|mpeg|mpe|mpv|m2v|mxf|nsv|ogv|rmvb|roq|svi|vob|webm|wmv|yuv)
	file_type="Videos"
	;;
	doc|docx|html|htm|fb2|odt|sxw|pdf|ps|rtf|tex|txt)
	file_type="Documents"
	;;
        a|ar|cpio|shar|LBR|iso|lbr|mar|tar|bz2|F|gz|lz|lzma|lzo|rz|sfark|sz|xz|Z|z|infl|7z|s7z|ace|afa|alz|apk|arc|arj|b1|ba|bh|cab|cfs|cpt|dar|dd|dgc|dmg|ear|gca|ha|hki|ice|jar|kgb|lzh|lha|lzx|pac|partimg|paq6|paq7|paq8|pea|pim|pit|qda|rar|rk|sda|sea|sen|sfx|sit|sitx|sqx|tar.gz|tgz|tar.Z|tar.bz2|tbz2|tar.lzma|tlz|uc|uc0|uc2|ucn|ur2|ue2|uca|uha|war|wim|xar|xp3|yz1|zip|zipx|zoo|zpaq|zz|ecc|par|par2)
	file_type="Compressed"
	;;
	*)
	file_type="Others"
	;;
esac

if  [ "$file_name_extension" = "videoplayback" ]
	then
		file_type="Videos"
fi

suffix=0
file_name_extension_prime=$file_name_extension
while test -e "$download_folder/$file_type/$file_name_extension_prime"; do
    file_name_extension_prime="($((++suffix))).$file_name_extension"
done
if [ "$save_as_temp" != "" ]
	then
		save_as="$download_folder/$file_type/$file_name_extension_prime"
	else
		save_as=""
fi
}

func_after () {
download_flag=$(cat $temp_path/"s$pdm_num".txt 2> /dev/null)
end_status=$(cat $temp_path/"e$pdm_num".txt 2> /dev/null)
if [ "" != "$end_time" ] && [ $end_status -eq 0 ]
	then
	echo "2"|cat >$temp_path/"e$pdm_num".txt
	sleep 20
fi
sleep 5
if [ "$no_password_config" = "no" ];then
	case "$do_after" in
    	2)
    	killall aria2c 2> /dev/null
    	echo $password_input |sudo -S shutdown -h now
    	;;
    	3)
    	killall aria2c 2> /dev/null
    	echo $password_input |sudo -S pm-suspend
    	;;
    	4)
    	killall aria2c 2> /dev/null
    	echo $password_input |sudo -S pm-hibernate
    	;;
	esac
	exit
else
	case "$do_after" in
    	2)
    	killall aria2c 2> /dev/null
	dbus-send --system --print-reply --dest=org.freedesktop.login1 /org/freedesktop/login1 "org.freedesktop.login1.Manager.PowerOff" boolean:true
    	;;
    	3)
    	killall aria2c 2> /dev/null
	dbus-send --system --print-reply --dest=org.freedesktop.login1 /org/freedesktop/login1 "org.freedesktop.login1.Manager.Suspend" boolean:true > /dev/null 2>&1
    	;;
    	4)
    	killall aria2c 2> /dev/null
	dbus-send --system --print-reply --dest=org.freedesktop.login1 /org/freedesktop/login1 "org.freedesktop.login1.Manager.Hibernate" boolean:true
    	;;
	esac
	exit
fi
}

fail_reconnecting (){
fail_counter=$(cat $temp_path/"f$pdm_num".txt 2> /dev/null)
if [ "$fail_counter" = "" ]
        then
 	    echo "0" > $temp_path/"f$pdm_num".txt
       	    fail_counter="0"
        else
     	    ((fail_counter ++))
	    echo "$fail_counter" > $temp_path/"f$pdm_num".txt

fi
if [ "$fail_counter" = "$retryf_config" ]
	then
	    echo "2"> $temp_path/"s$pdm_num".txt
	else
	    ifail="0"
	    echo "# Download Failed!reconnecting... .be patient!" > $temp_path/"zenity$pdm_num".txt
	    echo "#################"|cat >> $download_folder/report
	    date|cat >> $download_folder/report
	    echo "$download_link"|cat >> $download_folder/report
            echo "Download Failed!" | cat >> $download_folder/report
	    cat $temp_path/"d$pdm_num".txt >> $download_folder/report 2> /dev/null
	    echo "#################"|cat >> $download_folder/report
	    until ping -c 1 -w 5 www.google.com >/dev/null 2>&1 || [ "$ifail" = "$retryd_config" ]
		do
		    echo "# Check your internet connection!! \n Persepolis Download Manager will retry after $delay_config seconds" > $temp_path/"zenity$pdm_num".txt
		    if [ "$sound_config" = "yes" ]
			  then
	     			 paplay $notifications_path/connection.ogg
     		    fi
		    echo "#################"|cat >> $download_folder/report
     		    date|cat >> $download_folder/report
     		    echo "$download_link"|cat >> $download_folder/report
     		    echo "Internet connection droped!Check your internet connection!" >> $download_folder/report
		    cat $temp_path/"d$pdm_num".txt >> $download_folder/report 2> /dev/null
     		    echo "#################"|cat >> $download_folder/report
		    delay_config_counter=$delay_config
		    while [ "$delay_config_counter" != "0" ];do
			tput cup 12 0
       			sleep 1
       			((delay_config_counter --))
			echo "# Check your internet connection!! \n PersepolisDM will retry after $delay_config_counter s      " > $temp_path/"zenity$pdm_num".txt
		    done
		    ((ifail ++))
	    done
	    sleep 10
	    end_status=$(cat $temp_path/"e$pdm_num".txt 2> /dev/null)
	    if [ "$end_status" != "1" ]
     		then
	    	    echo "4"> $temp_path/"s$pdm_num".txt

	        else
	            echo "2"> $temp_path/"s$pdm_num".txt
	    fi
fi
}
download () {
progress_dialog &
size_remote=$(wget --spider -O "$temp_path/salam"  --no-check-certificate -T 5 -t 3 -e use-proxy=yes --proxy-user="$user_name" --proxy-password="$password_name" -e --http-proxy="$ip_port" --user="$site_user" --password="$site_password" "$download_link" 2>&1 | awk '/Length/ { print $2 }')
if [ "$size_remote" = "" ]
   then
       size_remote="0"
fi
size_remote=$((size_remote / 1048576))
case $size_m in
[2-9]|1[0-5])
x_para=$size_m
;;
*)
x_para=16
;;
esac

if [ $x_para -gt $max_num_connections ]
   then
       x_parameter=$max_num_connections
   else
       x_parameter=$x_para
fi

echo "$download_link"|grep -e "ftp://"
if [ "$?" -eq "0" ]
   then
     site_user_http=""
     site_password_http=""
     site_user_ftp="$site_user"
     site_password_ftp="$site_password"
   else
     site_user_http="$site_user"
     site_password_http="$site_password"
     site_user_ftp=""
     site_password_ftp=""
fi

aria2c --on-download-start="$temp_path_2/aria_ready_file"  --all-proxy=$ip_port --summary-interval=1 --all-proxy-passwd=$password_name --all-proxy-user=$user_name --http-user=$site_user_http --http-passwd=$site_password_http --ftp-user=$site_user_ftp --ftp-passwd=$site_password_ftp -s 16 -x $x_parameter -k 1M -c -d $download_folder_temp $aria2_options "$download_link" 2>&1 | cat > $temp_path/"$pdm_num".txt

echo "1" |cat > $temp_path/"r$pdm_num".txt
aria_status=$(cat $temp_path/"$pdm_num".txt|tail -50|egrep -a "download completed|download in-progress" )
end_status=$(cat $temp_path/"e$pdm_num".txt 2> /dev/null)
if [ "$end_status" != "1" ]
     then
	case $aria_status in
		"(OK):download completed.")
		echo "0"> $temp_path/"s$pdm_num".txt
		echo "# Please wait..." > $temp_path/"zenity$pdm_num".txt
		;;
		"(INPR):download in-progress.")
		download_flag=$(cat $temp_path/"s$pdm_num".txt 2> /dev/null)
		
                ;;
		*)
		download_flag=$(cat $temp_path/"s$pdm_num".txt 2> /dev/null)
		if [ "$download_flag" = "4" ] || [ "$download_flag" = "3" ]
  		  then
  		        fail_reconnecting
		fi
		;;
        esac
    else
     	echo "1"> $temp_path/"s$pdm_num".txt
fi

		
}


progress_dialog () {
aria_ready=$(cat $temp_path/"r$pdm_num".txt 2> /dev/null)
download_flag=$(cat $temp_path/"s$pdm_num".txt 2> /dev/null)
echo  "# Download Starting Now!" > $temp_path/"zenity$pdm_num".txt
while [ "$aria_ready" != "0" ] && [ "$download_flag" = "3" ]
        do
	  aria_ready=$(cat $temp_path/"r$pdm_num".txt 2> /dev/null)
	  download_flag=$(cat $temp_path/"s$pdm_num".txt 2> /dev/null)
	  sleep 0.5
done
aria_ready=$(cat $temp_path/"r$pdm_num".txt 2> /dev/null)
download_flag=$(cat $temp_path/"s$pdm_num".txt 2> /dev/null)
while [  "$aria_ready" = "0" ] && [ "$download_flag" = "3" ]
   do
   save_as_temp=$(cat $temp_path/"$pdm_num".txt 2> /dev/null|tail -50|awk '/FILE:/ {print $0 }'|tail -1|awk '/FILE/ {print $0 }'|awk '/\/home/ {print $0 }')   progress_title=$(cat $temp_path/"$pdm_num".txt 2> /dev/null|tail -50|awk '/CN/ {print $0 }'|tail -1)
   progress_title=$(cat $temp_path/"$pdm_num".txt 2> /dev/null|tail -50|awk '/CN/ {print $0 }'|tail -1)
   download_percent=$(echo "$progress_title"| awk -F/ '{ print $2 }' | awk -F"(" '{ print $2 }' | awk -F")" '{ print $1 }'|awk -F"%" '{ print $1 }')
   progress_title_percent=$(echo "$progress_title" | awk '{ print $2 }')
   progress_title_connections=$(echo "$progress_title" | awk '{ print $3 }'| awk -F ":" '{ print $2 }')
   progress_title_rate=$(echo "$progress_title" | awk '{ print $4 }'| awk -F ":" '{ print $2 }')
   progress_title_estimate=$(echo "$progress_title" | awk '{ print $5 }'| awk -F ":" '{ print $2 }'| awk -F "]" '{ print $1 }')
   file_extension
   echo  "# Link : ${download_link:0:70} ... ${download_link: -20} \n Save as : $save_as \n Downloaded : $progress_title_percent \n Transfer rate : $progress_title_rate \n Estimate time left : $progress_title_estimate \n Number of connections : $progress_title_connections " > $temp_path/"zenity$pdm_num".txt
   echo -e "$progress_title_percent Downloaded " > $temp_path/"d$pdm_num".txt
   if [ "$download_percent" != "100" ] ; then
	   echo "$download_percent" > $temp_path/"zenityp$pdm_num".txt
   fi
   sleep 2.2
   log
   download_flag=$(cat $temp_path/"s$pdm_num".txt 2> /dev/null)
   aria_ready=$(cat $temp_path/"r$pdm_num".txt 2> /dev/null)
done
}


stop (){
download_flag=$(cat $temp_path/"s$pdm_num".txt 2> /dev/null)
case $download_flag in
     0)
     save_as_temp=$(cat $temp_path/"$pdm_num".txt 2> /dev/null|tail -50|awk '/Download complete: / {print $0 }'|awk '/\/home/ {print $0 }')
     file_extension
     save_as_temp="$download_folder_temp/$file_name_extension"
     mv -n "$save_as_temp" "$save_as"
     if [ "$my_file" = "" ]
     	then
	    echo "100" > $temp_path/"zenityp$pdm_num".txt
     	    if [ "$open_config" = "yes" ]
		  then
	     	      xdg-open $download_folder/$file_type >/dev/null 2>&1
     	    fi
	else
	    echo "0" > $temp_path/"zenityp$pdm_num".txt
     fi
     sleep 1
     notify-send --icon=$icon_path  "Download Complete! The file Saved as :  $save_as"
     
     if [ "$sound_config" = "yes" ]
	  then
	      paplay $notifications_path/ok.ogg
     fi
     echo "#################"|cat >> $download_folder/report
     date|cat >> $download_folder/report
     echo "$download_link"|cat >> $download_folder/report
     echo "download complete!"|cat >> $download_folder/report
     echo "$save_as"|cat >> $download_folder/report
     echo "#################"|cat >> $download_folder/report
     ;;
     1)
     if [ "$my_file" = "" ]
        then
     		notify-send --icon=$icon_path "Download Paused! Persepolis Download Manager will resume download if you start download this file again. You can find summary & history of downloads & download links in $download_folder/report" 
     		echo "#################"|cat >> $download_folder/report
     		date|cat >> $download_folder/report
     		echo "$download_link"|cat >> $download_folder/report
     		echo "download paused!"|cat >> $download_folder/report
     		cat $temp_path/"d$pdm_num".txt >> $download_folder/report 2> /dev/null
     		echo "#################"|cat >> $download_folder/report
        else
     		notify-send --icon=$icon_path "Queue Paused! Persepolis Download Manager will resume download if you start download this file again. You can find summary & history of downloads & download links in $download_folder/report" 
	        echo "#################"|cat >> $download_folder/report
                date|cat >> $download_folder/report
                echo "$download_link"|cat >> $download_folder/report
                echo "Queue Paused"|cat >> $download_folder/report
                cat $temp_path/"d$pdm_num".txt >> $download_folder/report 2> /dev/null
                echo "#################"|cat >> $download_folder/report
     fi
     ;;

     2)
     if [ "$my_file" = "" ]
     	then
     	     echo "100" > $temp_path/"zenityp$pdm_num".txt
	else
     	     echo "0" > $temp_path/"zenityp$pdm_num".txt
     fi
     notify-send --icon=$icon_path "Download Failed! Persepolis Download Manager will resume download if you start download this file again. You can find summary & history of downloads & download links in $download_folder/report" 
     if [ "$sound_config" = "yes" ]
	  then
	      paplay $notifications_path/fail.ogg
     fi
     echo "#################"|cat >> $download_folder/report
     date|cat >> $download_folder/report
     echo "$download_link"|cat >> $download_folder/report
     echo "download Failed!"|cat >> $download_folder/report
     cat $temp_path/"d$pdm_num".txt >> $download_folder/report 2> /dev/null
     echo "#################"|cat >> $download_folder/report
     ;;


esac

}


download_single () {
echo "#################"|cat >> $download_folder/report
date|cat >> $download_folder/report
echo "$download_link"|cat >> $download_folder/report
echo "Download starting now!"|cat >> $download_folder/report
echo "#################"|cat >> $download_folder/report
download_flag=$(cat $temp_path/"s$pdm_num".txt 2> /dev/null)
while [ "$download_flag" != "0" ] && [ "$download_flag" != "2" ] && [ "$download_flag" != "1" ]
	do
	while [ "$download_flag" = "3" ]
		do
		download
		download_flag=$(cat $temp_path/"s$pdm_num".txt 2> /dev/null)
	done

	while [ "$download_flag" = "4" ]
		do
		echo "#################"|cat >> $download_folder/report
                date|cat >> $download_folder/report
                echo "$download_link"|cat >> $download_folder/report
                echo "Reconnecting"|cat >> $download_folder/report
                echo "#################"|cat >> $download_folder/report
		sleep_counter=20
		while [ "$sleep_counter" != "0" ];do
       			sleep 1
       			((sleep_counter --))
			echo "# Reconnecting... .be patient \n PersepolisDM will retry after $sleep_counter s      " > $temp_path/"zenity$pdm_num".txt
		done	
		while [ "$aria_ready" != "1" ]
		      do
		      aria_ready=$(cat $temp_path/"r$pdm_num".txt 2> /dev/null)
		      sleep 5
		done
		download_flag=$(cat $temp_path/"s$pdm_num".txt 2> /dev/null)
		if   [ "$download_flag" = "4" ]
		     then
		         echo "3"> $temp_path/"s$pdm_num".txt
                fi
                download_flag=$(cat $temp_path/"s$pdm_num".txt 2> /dev/null)
	done
done
stop
}


download_queue () {
for iq in `seq 1 $queue_config`
      do
	qi=1
	while read -r line
		do
		download_link=$line
		echo "$download_link" > $temp_path/"l$pdm_num".txt
		download_flag=$(cat $temp_path/"s$pdm_num".txt 2> /dev/null)
		if [ "$download_link" = "" ] || [ "$download_flag" = "1" ]
		   then
		       break
		fi
		echo "3"> $temp_path/"s$pdm_num".txt
		echo "0"> $temp_path/"f$pdm_num".txt
		if [ -f $temp_path/"fnameq$pdm_num".txt ];then
			fname=`sed "$qi q;d" $temp_path/"fnameq$pdm_num".txt`
			aria2_options="$aria2_options --out=$fname"
		fi		
		download_single
		if [ "$download_flag" = "2" ]
			then
			    if [ "$qi" = "1" ]
			    	then
			    	        echo "$download_link" > $temp_path/"qf$pdm_num".txt 2> /dev/null
					if [ -f $temp_path/"fnameq$pdm_num".txt ];then
					    	echo "$fname" > $temp_path/"fnameqf$pdm_num".txt
					fi					    	
				else
			    	        echo "$download_link" >> $temp_path/"qf$pdm_num".txt 2> /dev/null
			   		if [ -f $temp_path/"fnameq$pdm_num".txt ];then
					    	echo "$fname" > $temp_path/"fnameqf$pdm_num".txt
					fi
			    fi
		fi
		sleep 1
		((qi++))
	done < "$my_file"
	if [ ! $(cat $temp_path/"qf$pdm_num".txt 2> /dev/null) ]
	  	then
	  	    break
	fi
	if [ -f $temp_path/"fnameq$pdm_num".txt ];then
		cat $temp_path/"fnameqf$pdm_num".txt > $temp_path/"fnameq$pdm_num".txt
	fi
	my_file=$temp_path/"qf$pdm_num".txt
	sleep 5
done
download_flag=$(cat $temp_path/"s$pdm_num".txt 2> /dev/null)
if [ "$download_flag" != "1" ]
  	then
	    echo "100" > $temp_path/"zenityp$pdm_num".txt
	    sleep 1
  	    notify-send --icon=$icon_path "Queue Complete" > $temp_path/"zenity$pdm_num".txt
  	    if [ "$open_config" = "yes" ]
		  then
			 xdg-open $download_folder >/dev/null 2>&1
     	    fi
	    if [ "$sound_config" = "yes" ]
	         then
	             paplay $notifications_path/queue.ogg
            fi
	    echo "#################"|cat >> $download_folder/report
	    date|cat >> $download_folder/report
            echo "Queue Complete"|cat >> $download_folder/report
            echo "#################"|cat >> $download_folder/report

fi

}


download_process () {
case "$download_type" in
      1)
	download_single
        ;;
      2)
	download_queue
	;;

esac
func_after
}


#initialization
trap finish exit
tput civis      -- invisible
if [ ! -f ~/.persepolis_download_manager_terminal/config ]
	then
		echo -e "PDMT config file\ncolor=yes\nsound=yes\nopen=yes\nfolder=~/Downloads/Persepolis\nretryf=5\nretryd=5\ndelay=60\nqueue=2\nlog=no\nnopassword=no" > ~/.persepolis_download_manager_terminal/config
fi
color_config=$(cat ~/.persepolis_download_manager_terminal/config 2> /dev/null|awk '/color/ {print $0 }'|awk -F "=" '{print $2}')
sound_config=$(cat ~/.persepolis_download_manager_terminal/config 2> /dev/null|awk '/sound/ {print $0 }'|awk -F "=" '{print $2}')
download_folder_config=$(cat ~/.persepolis_download_manager_terminal/config 2> /dev/null|awk '/folder/ {print $0 }'|awk -F "=" '{print $2}')
retryf_config=$(cat ~/.persepolis_download_manager_terminal/config 2> /dev/null|awk '/retryf/ {print $0 }'|awk -F "=" '{print $2}')
retryd_config=$(cat ~/.persepolis_download_manager_terminal/config 2> /dev/null|awk '/retryd/ {print $0 }'|awk -F "=" '{print $2}')
delay_config=$(cat ~/.persepolis_download_manager_terminal/config 2> /dev/null|awk '/delay/ {print $0 }'|awk -F "=" '{print $2}')
open_config=$(cat ~/.persepolis_download_manager_terminal/config 2> /dev/null|awk '/open/ {print $0 }'|awk -F "=" '{print $2}')
queue_config=$(cat ~/.persepolis_download_manager_terminal/config 2> /dev/null|awk '/queue/ {print $0 }'|awk -F "=" '{print $2}')
log_config=$(cat ~/.persepolis_download_manager_terminal/config 2> /dev/null|awk '/log/ {print $0 }'|awk -F "=" '{print $2}')
no_password_config=$(cat ~/.persepolis_download_manager_terminal/config 2> /dev/null|awk '/nopassword/ {print $0 }'|awk -F "=" '{print $2}')
normal_color="\E[33;00m"
if [ "$color_config" = "yes" ]
    then
        logo_color="\E[36;01m"
	text_color="\E[31;01m"
	text_color0="\E[33;01m"
	progress_color="\E[32;01m"
    else
        logo_color=$normal_color
	text_color=$normal_color
	text_color0=$normal_color
	progress_color=$normal_color
fi
if [ "$retryf_config" = "" ]
	then
	    retryf_config="10"
fi

input_options=$@
user=$HOME
notifications_path="$user/.persepolis_download_manager_terminal/notifications"
download_folder="$user/Downloads/Persepolis"
download_folder_temp="$user/.persepolis"
temp_path="/tmp/persepolisdm"
temp_path_2="$user/.persepolis_download_manager_terminal/temp"
icon_path="$user/.persepolis_download_manager_terminal/icon.png"
pdm_num=$(cat $temp_path/pdm_number.txt)
first_char=`echo "${download_folder_config:0:2}"`
if [ "$first_char" = "~/" ]
    then
        remove_char_folder=`echo "${download_folder_config#*~}"`
        download_folder_config="$user$remove_char_folder"
fi

if [ ! -d "$download_folder_config" ]
        then
            echo "# Directory not exist! : $download_folder_config \n Download file will save as $download_folder" > $temp_path/"zenity$pdm_num".txt
            sleep 2
	else
	    download_folder=$download_folder_config
fi
mkdir $download_folder >/dev/null 2>&1
mkdir $download_folder_temp >/dev/null 2>&1
mkdir "$download_folder/Audios" >/dev/null 2>&1
mkdir "$download_folder/Videos" >/dev/null 2>&1
mkdir "$download_folder/Documents" >/dev/null 2>&1
mkdir "$download_folder/Compressed" >/dev/null 2>&1
mkdir "$download_folder/Others" >/dev/null 2>&1
#inputs
while getopts "l:i:p:u:a:j:k:s:e:m:o:d:w:f:hvc" options ; do
case "${options}" in
    l)
    download_link=${OPTARG}
    ;;
    i)
    ip_name=${OPTARG}
    ;;
    p)
    port_name=${OPTARG}
    ;;
    u)
    user_name=${OPTARG}
    ;;
    a)
    password_name=${OPTARG}
    ;;
    s)
    start_time_input=${OPTARG}
    ;;
    e)
    end_time_input=${OPTARG}
    ;;
    m)
    max_num_connections=${OPTARG}
    ;;
    o)
    aria2_options_back=${OPTARG}
    aria2_options="$aria2_options $aria2_options_back"
    ;;
    d)
    do_after_download=${OPTARG}
    ;;
    w)
    password_input=${OPTARG}
    ;;
    f)
    my_file=${OPTARG}
    ;;
    j)
    site_user=${OPTARG}
    ;;
    k)
    site_password=${OPTARG}
    ;;
    *)
    echo "Wrong Input!"
    exit
    ;;
esac
done

#find link & define download type
if [ "$my_file" != "" ]
	then

	    cat $my_file
	    if [ $? -eq 0 ]
		then
	    	    download_type=2
		else
		    echo "#ERROR!!File Not Exist. Adress : $my_file "
	    	    exit
	    fi

  	else
                   download_type=1

fi

#proxy
if [ "$ip_name" != "" ] && [ "$port_name" != "" ]
       then ip_port="$ip_name:$port_name"
       else ip_port=""
fi
if [ "$user_name" != "" ] && [ "$password_name" != "" ]
          then user_pass="$user_name:$password_name"
          else user_pass=":"
fi
#start and end time
start_time_hour=$(echo "$start_time_input" | awk -F: '{ print $1 }')
start_time_minute=$(echo "$start_time_input" | awk -F: '{ print $2 }')
end_time_hour=$(echo "$end_time_input" | awk -F: '{ print $1 }')
end_time_minute=$(echo "$end_time_input" | awk -F: '{ print $2 }')
if [ "$start_time_input" != "" ]
   then
	start_time_hour_length=${#start_time_hour}
	if [ $start_time_hour_length -lt 2 ]
	then
	start_time_hour="0$start_time_hour"
	fi
	start_time_minute_length=${#start_time_minute}
	if [ $start_time_minute_length -lt 2 ]
	then
	start_time_minute="0$start_time_minute"
	fi
        start_time="$start_time_hour:$start_time_minute"
   else start_time="$start_time_hour$start_time_minute"
fi
if  [ "$end_time_input" != "" ]
    then
	end_time_hour_length=${#end_time_hour}
	if [ $end_time_hour_length -lt 2 ]
	then
	end_time_hour="0$end_time_hour"
	fi
	end_time_minute_length=${#end_time_minute}
	if [ $end_time_minute_length -lt 2 ]
	then
	end_time_minute="0$end_time_minute"
	fi
        end_time="$end_time_hour:$end_time_minute"
     else end_time="$end_time_hour$end_time_minute"
fi
#after download and input password
case "$do_after_download" in

      "shutdown")
      do_after="2"
      ;;
      "hibernate")
      do_after="3"
      ;;
      "suspend")
      do_after="4"
      ;;
      *)
      do_after="1"
      ;;
esac

#max number of connections
if [ "$max_num_connections" = "" ]
    then
        max_num_connections=16
fi


#main code
echo "#!/bin/bash" > $temp_path_2/aria_ready_file
echo "echo "0"|cat > $temp_path/"r$pdm_num".txt" >> $temp_path_2/aria_ready_file
echo "echo "3"|cat > $temp_path/"s$pdm_num".txt" >> $temp_path_2/aria_ready_file
echo "ps -A | grep -i aria2c | awk {'print \$1'}|tail -1|cat > $temp_path/"p$pdm_num".txt" >> $temp_path_2/aria_ready_file
chmod +x $temp_path_2/aria_ready_file
echo "3"> $temp_path/"s$pdm_num".txt
var1=`date +%H:%M`
if [ "" != "$start_time" ] && [ "$var1" != "$start_time" ]
   then

      echo "# Download will be started at $start_time !" > $temp_path/"zenity$pdm_num".txt
      while [ "$PID_ZENITY" = "" ] ; do
		
		        PID_ZENITY=$(ps -C zenity h -o pid,command | grep "$pdm_num Persepolis Download Manager" | awk '{print $1}')	
			sleep 1
      done
      while [ "$var1" != "$start_time" ] && [ "$PID_ZENITY" != "" ]
             do
		sleep 10
		var1=`date +%H:%M`
		  PID_ZENITY=$(ps h -o pid -p ${PID_ZENITY})
      done

	if [ "$PID_ZENITY" = "" ] ; then
		notify-send -t 10 --icon=$icon_path "Download Canceled!"
		exit
	fi
      echo "#################"|cat >> $download_folder/report
      date|cat >> $download_folder/report
      echo "download process starting now"|cat >> $download_folder/report
      echo "#################"|cat >> $download_folder/report

fi
echo "# Please Wait..." > $temp_path/"zenity$pdm_num".txt
(
if [ "" != "$end_time" ]
	then
	        echo "0">$temp_path/"e$pdm_num".txt
	        end_status=$(cat $temp_path/"e$pdm_num".txt 2> /dev/null)

		while [ "$var1" != "$end_time" ] && [ $end_status -ne 2 ]
		do
		sleep 10
		end_status=$(cat $temp_path/"e$pdm_num".txt 2> /dev/null)
		var1=`date +%H:%M`
		done

		if [ $end_status -ne 2 ]
		   then
		       echo "1">$temp_path/"e$pdm_num".txt
                       aria2_pid=$(cat $temp_path/"p$pdm_num".txt 2> /dev/null)
		       kill $aria2_pid 2> /dev/null
		       echo "# Time is UP!" > $temp_path/"zenity$pdm_num".txt
		       echo "100" > $temp_path/"zenityp$pdm_num".txt
		       sleep 1
		       notify-send -t 5 --icon=$icon_path "Time is UP!"
		       echo "#################"|cat >> $download_folder/report
		       date|cat >> $download_folder/report
		       echo "Time is UP!" >> $download_folder/report
		       echo "#################"|cat >> $download_folder/report
		   else
		       exit
		fi
fi
) &
(
download_process
) 
